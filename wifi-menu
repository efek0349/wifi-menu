#!/bin/sh

# Colors vars
RED="\033[0;031m"
BLU="\033[1;34m"
YLW="\033[1;33m"
RST="\033[1;0m"
GRN="\033[32m"
GRY="\033[37m"

INT=$1
WIFI_DIR="/etc/wifi_saved"

if [ "$(id -u)" != "0" ]; then
    echo -ne "[!] ${RED}This script needs to be run as root.\n${RST}"
    exit
fi

if [ -z "$1" ]; then
    echo -ne "[!] ${RED} Usage: doas $0 ${YLW}[interface]${RST}\n"
    exit
fi

read_saved() {
    #/sbin/ifconfig $INT -inet6 -inet -bssid -chan -nwid -nwkey -wpa -wpakey
    #/sbin/ifconfig $INT lladdr random

    SAVED_LIST=$(ls -h $WIFI_DIR)
           if [ -z "${SAVED_LIST[0]}" ]; then
                 echo -ne "[!] ${YLW}No previous WiFi connections found.\n${RST}"
                 conf_create
           fi

    i=1
    for j in ${SAVED_LIST}
    do
        echo "$i) $j"
        file[i]=$j
        i=$(( i + 1 ))
    done | column -s '\n' | sed 's@\\|$@\\)\\)@g';echo
    i=1
    for j in ${SAVED_LIST}
    do
        file[i]=$j
        i=$(( i + 1 ))
    done
    echo -ne "[+] ${BLU}Select a previously saved WiFi connection or press ${YLW}\"Enter\" ${BLU}to skip: ${RST}"
    read v_CHOOSELIST

    if [ -z "${file[$v_CHOOSELIST]}" ];then
        conf_create
    fi

    echo -ne "[+] ${YLW}\"${file[$v_CHOOSELIST]}\" ${BLU}is selected\n${RST}"
    saved_connect ${file[$v_CHOOSELIST]}
}

conf_create() {
    /sbin/ifconfig $INT up
    /usr/bin/pkill dhcpleasectl
    LIST=$(/sbin/ifconfig $INT scan 2>/dev/null |
                            sed -ne 's/^.*nwid \(.*\) chan .*$/\1/p' | tr -d \" | sed '/^$/d' | uniq )
    i=1
    for j in $LIST
    do
        echo "$i) $j"
        list[i]=$j
        i=$(( i + 1 ))
    done | column -s '\n' |sed 's@\\|$@\\)\\)@g';echo

    if [ -z "${LIST[0]}" ]; then
		echo -ne "[!] ${RED}No available wifi connection using $INT\n${RST}"
		exit
    fi
    i=1
    for j in $LIST
    do
       list[i]=$j
       i=$(( i + 1 ))
    done

    echo -ne "[+] ${BLU}Select a WiFi connection or press ${YLW}\"Enter\" ${BLU}to exit: ${RST}"
    read i_CHOOSELIST

    if [ -z "${list[$i_CHOOSELIST]}" ]; then
        echo -ne "[!] ${RED}Exiting\n${RST}"
        exit
    fi
        echo -ne "[+] ${BLU}Please enter the passphrase for ${YLW}\"${list[$i_CHOOSELIST]}\"?\n${RST}"
        echo -ne "[+] Password: "
        stty -echo
        read  PASSWORD
        stty echo

    if [ ${#PASSWORD} -lt 8 ];then
        echo -ne "\n[!] ${RED}wpakey:${YLW} passphrase must be between 8 and 63 characters${RST}\n"
        exit
    fi

echo "lladdr random join ${list[$i_CHOOSELIST]} wpakey $PASSWORD
inet autoconf
up" > "$WIFI_DIR/${list[$i_CHOOSELIST]}.$INT" | xargs
chmod 600 $WIFI_DIR/${list[$i_CHOOSELIST]}.$INT

    echo -ne "[+] ${BLU}Creating new configuration for the ${YLW}\"${list[$i_CHOOSELIST]}\"${RST}${BLU} wireless network.\n${RST}"
    connect "${list[$i_CHOOSELIST]}"
}

saved_connect() {
    echo -ne "[+] ${BLU}Connecting using the ${YLW}\"${file[$v_CHOOSELIST]}\"${RST}${BLU} configuration file.${RST}\n"
    /sbin/ifconfig $INT up
    /usr/bin/pkill dhcpleasectl
    /sbin/ifconfig $INT lladdr random nwid "$(grep join "$WIFI_DIR/${file[$v_CHOOSELIST]}" | head -1 |
            awk '{print $4}' )" wpakey "$(grep  wpakey "$WIFI_DIR/${file[$v_CHOOSELIST]}"  |
            head -1| awk '{print $6}')"
    /bin/cp "$WIFI_DIR/${file[$v_CHOOSELIST]}" /etc/hostname.$INT
    echo -ne "[+] ${BLU}Interface ${YLW}$INT${BLU} has been configured the ESSID is ${YLW}\"${file[$v_CHOOSELIST]}\"${RST}"
    echo -ne "\n[+] ${BLU}Interface ${YLW}$INT${BLU} is now up${RST}\n"
    echo -ne "[+] ${BLU}Running ${YLW}dhcpleasectl\n${RST}"
    /usr/sbin/dhcpleasectl $INT
	if [[ $(rcctl ls all|grep dnscrypt_proxy) == *dnscrypt* ]];then
		/usr/sbin/rcctl restart dnscrypt_proxy unbound
    else 
		/usr/sbin/rcctl restart unbound
	fi
    exit
}

connect() {
    ESSID=$*
    echo -ne "[+] ${BLU}Connecting using file ${YLW}\"$ESSID\"${RST}\n"
    /sbin/ifconfig $INT up
    /usr/bin/pkill dhcpleasectl
    /bin/cp "$WIFI_DIR/${list[$i_CHOOSELIST]}.$INT" /etc/hostname.$INT
    echo -ne "[+] ${BLU}Interface ${YLW}$INT${BLU} has been configured the ESSID is ${YLW}\"$ESSID\"${RST}"
    /sbin/ifconfig $INT lladdr random nwid "$ESSID" wpakey "$PASSWORD"
    echo -ne "\n[+] ${BLU}Interface ${YLW}$INT${BLU} is now up${RST}\n"
    echo -ne "[+] ${BLU}Running ${YLW}dhcpleasectl${RST}\n"
    /usr/sbin/dhcpleasectl $INT
	if [[ $(rcctl ls all|grep dnscrypt_proxy) == *dnscrypt* ]];then
		/usr/sbin/rcctl restart dnscrypt_proxy unbound
    else 
		/usr/sbin/rcctl restart unbound
	fi
    exit
}

### wifite.py ###
clear
echo -ne "$GRN   .;'                     \`;,            \n"
echo -ne "$GRN  .;'  ,;'             \`;,  \`;,    OpenBSD Wireless Network Management Script\n"
echo -ne "$GRN .;'  ,;'  ,;'     \`;,  \`;,  \`;,   OS      :$RST`uname -srm`\n"
echo -ne "$GRN ::   ::   :   $GRY( ) $GRN  :   ::   ::   SHELL   :$RST${SHELL##*/}   \n"
echo -ne "$GRN ':.  ':.  ':. $GRY/_\\ $GRN,:'  ,:'  ,:'   TERM    :$RST$TERM  \n"
echo -ne "$GRN  ':.  ':.    $GRY/___\\ $GRN   ,:'  ,:'    PC      :$RST`sysctl -n hw.vendor` `sysctl -n hw.product`\n"
echo -ne "$GRN   ':.       $GRY/_____\\ $GRN     ,:'     \n"
echo -ne "$GRN            $GRY/       \\ $GRN    ${RST}\n\n"

[[ -d $WIFI_DIR ]] || mkdir -p -m 600 $WIFI_DIR
read_saved
